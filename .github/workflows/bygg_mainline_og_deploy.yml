name: Bygg, deploy DEV, publiser, tag og dispatch deploy til PROD

on:
  push:
    branches:
      - master

jobs:
  bygg_deploy_dev_publiser_tag:
    name: 'Bygg, publiser, deploy DEV, tag og dispatch deploy til PROD'
    runs-on: ubuntu-latest
    env:
      package: eessi-pensjon-journalforing
    steps:
      - name: 'Pull repo'
        uses: actions/checkout@v3

      - name: 'Setter dato og commit variabel'
        run: |
          export TZ=CET
          echo "DATE=$(date "+%Y-%m-%d--%H-%M-%S")" >> $GITHUB_ENV
          echo "COMMIT_HASH=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: 'Setter Image'
        run: echo "IMAGE=ghcr.io/${{ github.repository }}/${{ env.package }}:${{ env.DATE }}---${{ env.COMMIT_HASH }}" >> $GITHUB_ENV

      - name: 'Java'
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: temurin

      - name: 'Bygg og publiser docker image'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export TZ=CET
          ./gradlew build --stacktrace
          docker build --tag ${{ env.IMAGE }} .
          docker login ghcr.io -u ${GITHUB_REPOSITORY} -p ${{ secrets.GITHUB_TOKEN }}
          docker push ${{ env.IMAGE }}

      - name: 'Deploy to DEV'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais/dev-gcp.yml
          IMAGE: ${{ env.IMAGE }}

      - name: 'Opprett git tag'
        run: |
          curl -v -s -X POST https://api.github.com/repos/${{ github.repository }}/git/refs -H "Authorization: token  ${{ secrets.GITHUB_TOKEN }}" -d '{ "ref": "refs/tags/${{ env.DATE }}---${{ env.COMMIT_HASH }}",  "sha": "${{ env.COMMIT_HASH }}" }'

      - name: 'Dispatch PROD'
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.DISPATCH_TOKEN }}
          repository: ${{ github.repository }}
          event-type: deploy-prod
          client-payload: '{"image": "${{ env.IMAGE }}"}'
