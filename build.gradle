buildscript {

	ext {
		kotlinVersion = '2.1.10'
		springBootVersion = '3.4.2'
		springKafkaVersion = '3.3.2'
		tokenSupportVersion = '5.0.11'
		imageioVersion = '3.12.0'
	}
}

plugins {
	id 'org.springframework.boot' version "${springBootVersion}"
	id "io.spring.dependency-management" version "1.1.7"
	id "org.openrepose.gradle.plugins.jaxb" version "2.5.0"
	id "org.jetbrains.kotlin.jvm" version "$kotlinVersion"
	id "org.jetbrains.kotlin.plugin.spring" version "$kotlinVersion"
	id "org.jetbrains.kotlin.plugin.allopen" version "$kotlinVersion"
}

apply from: "buildSrc/ep-module.gradle"

group = 'no.nav.eessi.pensjon'

configurations {
	xsd
}

dependencies {

	// Spring-boot BOM-fil spesifiserer versjoner for Spring Boot-avhengigheter
	implementation(platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}"))
	implementation("org.springframework.boot:spring-boot-starter-aop")
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("org.yaml:snakeyaml:2.3") // Pga https://security.snyk.io/package/maven/org.yaml:snakeyaml
	implementation("org.springframework.boot:spring-boot-starter-actuator")
	implementation("org.springframework.boot:spring-boot-actuator")

	// Spring Framework BOM-fil kan overstyre så vi får siste patch-versjon av Spring Framework
	implementation(platform("org.springframework:spring-framework-bom:6.2.2"))

	implementation("org.apache.httpcomponents.client5:httpclient5:5.4.2")

	implementation("org.springframework.retry:spring-retry:2.0.11")

	implementation "com.fasterxml.jackson.core:jackson-core:2.18.1"

	implementation 'org.jetbrains.kotlin:kotlin-reflect'

	implementation "org.springframework.kafka:spring-kafka:$springKafkaVersion"

	//GCP
	implementation("com.google.cloud:google-cloud-storage:2.48.1")

	// Eessi pensjon biblioteker
	implementation("no.nav.eessi.pensjon:ep-eux:2.4.30")
	implementation("no.nav.eessi.pensjon:ep-metrics:2.0.102")
	implementation("no.nav.eessi.pensjon:ep-logging:2.2.7")

    implementation("no.nav.eessi.pensjon:ep-personoppslag:13.2.43"){
		exclude module: 'ep-eux'
		exclude module: 'ep-metrics'
		exclude module: 'ep-logging'
	}
	implementation("no.nav.eessi.pensjon:ep-routing:2.0.201"){
		exclude module: 'ep-eux'
		exclude module: 'ep-metrics'
		exclude module: 'ep-logging'
		exclude module: 'ep-personoppslag'
	}

	// PDF box
	implementation("org.apache.pdfbox:pdfbox-tools:3.0.3")
	implementation("com.twelvemonkeys.imageio:imageio-jpeg:${imageioVersion}")
	implementation("com.twelvemonkeys.imageio:imageio-tiff:${imageioVersion}")

	// Logging
	implementation("net.logstash.logback:logstash-logback-encoder:8.0")
    testImplementation project(path: ':')
    configurations { all*.exclude group: 'commons-logging', module: 'commons-logging' }
	implementation("org.slf4j:jcl-over-slf4j:2.0.16")

	//Auth
	implementation("no.nav.security:token-client-spring:${tokenSupportVersion}")
	implementation("no.nav.security:token-validation-spring:${tokenSupportVersion}")
	implementation("no.nav.security:token-validation-jaxrs:${tokenSupportVersion}")
	implementation("no.nav.security:token-validation-test-support:2.0.5")

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude module: 'junit'
		exclude module: "mockito-core"
		exclude module: "junit-vintage-engine"
	}
	testImplementation "org.springframework.kafka:spring-kafka-test:$springKafkaVersion"

	
	testImplementation("org.junit.jupiter:junit-jupiter:5.11.4")

	//mock - test
	testImplementation("org.mock-server:mockserver-netty:5.15.0") {
		exclude module: 'junit'
	}
	testImplementation("io.mockk:mockk:1.13.16")
	testImplementation("com.ninja-squad:springmockk:4.0.2")

	// Architecture tests
	testImplementation 'com.tngtech.archunit:archunit:1.3.0'



}
